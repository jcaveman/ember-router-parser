'use strict';

/**
 * Constructor for Comments model
 * @param {object} ast - AST with comments generated by esprima (using the
 *        comment and range options)
 */
function Comments(ast) {
  this.format(ast.comments);
}

/**
 * Object representing the comments . The format of the object will be:
 * {
 *   <index>: <value>
 * }
 * Where <index> is a number representing the end of the range for this comment.
 * <value> is the value of the comment
 * @type {array} array of comments as provided by esprima
 */
Comments.prototype.comments = {};

/**
 * Grabs comments array from AST and transforms it into this.comments format
 * @param {array} comments - Comments array from esprima
 */
Comments.prototype.format = function(comments) {
  this.comments = {};

  if (!comments) {
    return;
  }

  for (var i = 0; i < comments.length; i++) {
    this.comments[comments[i].range[1]] = comments[i].value;
  }
};

module.exports = Comments;
